{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/abe/Projects/mad-max-ak2020/client/src/components/CheckBox/CheckBox.js\",\n    _s = $RefreshSig$();\n\nimport { pickHTMLProps } from \"pick-react-known-prop\";\nimport PropTypes from \"prop-types\";\nimport React, { useState, useEffect } from \"react\"; // import CheckBoxStyled, { Label } from \"./CheckBox.styled\";\n\nconst CheckBox = props => {\n  _s();\n\n  const {\n    checked: checkedFromProps,\n    children,\n    disabled,\n    name,\n    onClick,\n    type,\n    value,\n    ...rest\n  } = props;\n  const [checked, setChecked] = useState(checkedFromProps);\n  useEffect(() => {\n    setChecked(checkedFromProps);\n  }, [checkedFromProps]);\n\n  const onClickHandler = event => {\n    if (onClick && !disabled) {\n      onClick(!checked, event);\n    }\n\n    if (!disabled) {\n      setChecked(!checked);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(CheckBox, {\n    onClick: onClickHandler,\n    ...pickHTMLProps(rest),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      checked: checked,\n      disabled: disabled,\n      name: name,\n      onChange: () => {},\n      type: type,\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), \"Checkbox\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CheckBox, \"e4TW2wYAdNrUUh+F7HTjz27TJEU=\");\n\n_c = CheckBox;\nCheckBox.propTypes = {\n  checked: PropTypes.bool,\n  children: PropTypes.node,\n  disabled: PropTypes.bool,\n  name: PropTypes.string,\n  onClick: PropTypes.func,\n  type: PropTypes.oneOf([\"checkbox\", \"radio\"]),\n  value: PropTypes.bool\n};\nCheckBox.defaultProps = {\n  checked: false,\n  type: \"checkbox\"\n};\nCheckBox.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"CheckBox\",\n  \"props\": {\n    \"checked\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"type\": {\n      \"defaultValue\": {\n        \"value\": \"\\\"checkbox\\\"\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"\\\"checkbox\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"radio\\\"\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"children\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"disabled\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"name\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onClick\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"value\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\nexport default CheckBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckBox\");\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/CheckBox/CheckBox.js\"] = {\n    name: \"CheckBox\",\n    docgenInfo: CheckBox.__docgenInfo,\n    path: \"src/components/CheckBox/CheckBox.js\"\n  };\n}","map":{"version":3,"sources":["/Users/abe/Projects/mad-max-ak2020/client/src/components/CheckBox/CheckBox.js"],"names":["pickHTMLProps","PropTypes","React","useState","useEffect","CheckBox","props","checked","checkedFromProps","children","disabled","name","onClick","type","value","rest","setChecked","onClickHandler","event","propTypes","bool","node","string","func","oneOf","defaultProps"],"mappings":";;;;;AAAA,SAASA,aAAT,QAA8B,uBAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CAEA;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AAAA;;AACxB,QAAM;AACJC,IAAAA,OAAO,EAAEC,gBADL;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,QAHI;AAIJC,IAAAA,IAJI;AAKJC,IAAAA,OALI;AAMJC,IAAAA,IANI;AAOJC,IAAAA,KAPI;AAQJ,OAAGC;AARC,MASFT,KATJ;AAWA,QAAM,CAACC,OAAD,EAAUS,UAAV,IAAwBb,QAAQ,CAACK,gBAAD,CAAtC;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,UAAU,CAACR,gBAAD,CAAV;AACD,GAFQ,EAEN,CAACA,gBAAD,CAFM,CAAT;;AAIA,QAAMS,cAAc,GAAGC,KAAK,IAAI;AAC9B,QAAIN,OAAO,IAAI,CAACF,QAAhB,EAA0B;AACxBE,MAAAA,OAAO,CAAC,CAACL,OAAF,EAAWW,KAAX,CAAP;AACD;;AAED,QAAI,CAACR,QAAL,EAAe;AACbM,MAAAA,UAAU,CAAC,CAACT,OAAF,CAAV;AACD;AACF,GARD;;AAUA,sBACE,QAAC,QAAD;AAAU,IAAA,OAAO,EAAEU,cAAnB;AAAA,OAAuCjB,aAAa,CAACe,IAAD,CAApD;AAAA,4BACE;AACE,MAAA,OAAO,EAAER,OADX;AAEE,MAAA,QAAQ,EAAEG,QAFZ;AAGE,MAAA,IAAI,EAAEC,IAHR;AAIE,MAAA,QAAQ,EAAE,MAAM,CAAE,CAJpB;AAKE,MAAA,IAAI,EAAEE,IALR;AAME,MAAA,KAAK,EAAEC;AANT;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA5CD;;GAAMT,Q;;KAAAA,Q;AA8CNA,QAAQ,CAACc,SAAT,GAAqB;AACnBZ,EAAAA,OAAO,EAAEN,SAAS,CAACmB,IADA;AAEnBX,EAAAA,QAAQ,EAAER,SAAS,CAACoB,IAFD;AAGnBX,EAAAA,QAAQ,EAAET,SAAS,CAACmB,IAHD;AAInBT,EAAAA,IAAI,EAAEV,SAAS,CAACqB,MAJG;AAKnBV,EAAAA,OAAO,EAAEX,SAAS,CAACsB,IALA;AAMnBV,EAAAA,IAAI,EAAEZ,SAAS,CAACuB,KAAV,CAAgB,CAAC,UAAD,EAAa,OAAb,CAAhB,CANa;AAOnBV,EAAAA,KAAK,EAAEb,SAAS,CAACmB;AAPE,CAArB;AAUAf,QAAQ,CAACoB,YAAT,GAAwB;AACtBlB,EAAAA,OAAO,EAAE,KADa;AAEtBM,EAAAA,IAAI,EAAE;AAFgB,CAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,eAAeR,QAAf","sourcesContent":["import { pickHTMLProps } from \"pick-react-known-prop\";\nimport PropTypes from \"prop-types\";\nimport React, { useState, useEffect } from \"react\";\n\n// import CheckBoxStyled, { Label } from \"./CheckBox.styled\";\n\nconst CheckBox = props => {\n  const {\n    checked: checkedFromProps,\n    children,\n    disabled,\n    name,\n    onClick,\n    type,\n    value,\n    ...rest\n  } = props;\n\n  const [checked, setChecked] = useState(checkedFromProps);\n\n  useEffect(() => {\n    setChecked(checkedFromProps);\n  }, [checkedFromProps]);\n\n  const onClickHandler = event => {\n    if (onClick && !disabled) {\n      onClick(!checked, event);\n    }\n\n    if (!disabled) {\n      setChecked(!checked);\n    }\n  };\n\n  return (\n    <CheckBox onClick={onClickHandler} {...pickHTMLProps(rest)}>\n      <input\n        checked={checked}\n        disabled={disabled}\n        name={name}\n        onChange={() => {}}\n        type={type}\n        value={value}\n      />\n\n      <span />\n\n      Checkbox\n    </CheckBox>\n  );\n};\n\nCheckBox.propTypes = {\n  checked: PropTypes.bool,\n  children: PropTypes.node,\n  disabled: PropTypes.bool,\n  name: PropTypes.string,\n  onClick: PropTypes.func,\n  type: PropTypes.oneOf([\"checkbox\", \"radio\"]),\n  value: PropTypes.bool\n};\n\nCheckBox.defaultProps = {\n  checked: false,\n  type: \"checkbox\"\n};\n\nexport default CheckBox;\n"]},"metadata":{},"sourceType":"module"}