{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/abe/Projects/mad-max-ak2020/client/src/components/CheckBox/CheckBox.js\",\n    _s = $RefreshSig$();\n\nimport { pickHTMLProps } from \"pick-react-known-prop\";\nimport PropTypes from \"prop-types\";\nimport React, { useState, useEffect } from \"react\"; // import CheckBoxStyled, { Label } from \"./CheckBox.styled\";\n\nconst CheckBox = props => {\n  _s();\n\n  const {\n    checked: checkedFromProps,\n    children,\n    disabled,\n    name,\n    onClick,\n    type,\n    value,\n    ...rest\n  } = props;\n  const [checked, setChecked] = useState(checkedFromProps);\n  useEffect(() => {\n    setChecked(checkedFromProps);\n  }, []);\n\n  const onClickHandler = event => {\n    if (onClick && !disabled) {\n      onClick(!checked, event);\n    }\n\n    if (!disabled) {\n      setChecked(!checked);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(CheckBox, {\n    onClick: onClickHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      checked: checked,\n      disabled: disabled,\n      name: name,\n      onChange: () => {},\n      type: type,\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), \"Checkbox\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}; // CheckBox.propTypes = {\n//   checked: PropTypes.bool,\n//   children: PropTypes.node,\n//   disabled: PropTypes.bool,\n//   name: PropTypes.string,\n//   onClick: PropTypes.func,\n//   type: PropTypes.oneOf([\"checkbox\", \"radio\"]),\n//   value: PropTypes.bool\n// };\n// CheckBox.defaultProps = {\n//   checked: false,\n//   type: \"checkbox\"\n// };\n\n\n_s(CheckBox, \"e4TW2wYAdNrUUh+F7HTjz27TJEU=\");\n\n_c = CheckBox;\nexport default CheckBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckBox\");","map":{"version":3,"sources":["/Users/abe/Projects/mad-max-ak2020/client/src/components/CheckBox/CheckBox.js"],"names":["pickHTMLProps","PropTypes","React","useState","useEffect","CheckBox","props","checked","checkedFromProps","children","disabled","name","onClick","type","value","rest","setChecked","onClickHandler","event"],"mappings":";;;;;AAAA,SAASA,aAAT,QAA8B,uBAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CAEA;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AAAA;;AACxB,QAAM;AACJC,IAAAA,OAAO,EAAEC,gBADL;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,QAHI;AAIJC,IAAAA,IAJI;AAKJC,IAAAA,OALI;AAMJC,IAAAA,IANI;AAOJC,IAAAA,KAPI;AAQJ,OAAGC;AARC,MASFT,KATJ;AAWA,QAAM,CAACC,OAAD,EAAUS,UAAV,IAAwBb,QAAQ,CAACK,gBAAD,CAAtC;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,UAAU,CAACR,gBAAD,CAAV;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMS,cAAc,GAAGC,KAAK,IAAI;AAC9B,QAAIN,OAAO,IAAI,CAACF,QAAhB,EAA0B;AACxBE,MAAAA,OAAO,CAAC,CAACL,OAAF,EAAWW,KAAX,CAAP;AACD;;AAED,QAAI,CAACR,QAAL,EAAe;AACbM,MAAAA,UAAU,CAAC,CAACT,OAAF,CAAV;AACD;AACF,GARD;;AAUA,sBACE,QAAC,QAAD;AAAU,IAAA,OAAO,EAAEU,cAAnB;AAAA,4BACE;AACE,MAAA,OAAO,EAAEV,OADX;AAEE,MAAA,QAAQ,EAAEG,QAFZ;AAGE,MAAA,IAAI,EAAEC,IAHR;AAIE,MAAA,QAAQ,EAAE,MAAM,CAAE,CAJpB;AAKE,MAAA,IAAI,EAAEE,IALR;AAME,MAAA,KAAK,EAAEC;AANT;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA5CD,C,CA8CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;GA3DMT,Q;;KAAAA,Q;AA6DN,eAAeA,QAAf","sourcesContent":["import { pickHTMLProps } from \"pick-react-known-prop\";\nimport PropTypes from \"prop-types\";\nimport React, { useState, useEffect } from \"react\";\n\n// import CheckBoxStyled, { Label } from \"./CheckBox.styled\";\n\nconst CheckBox = props => {\n  const {\n    checked: checkedFromProps,\n    children,\n    disabled,\n    name,\n    onClick,\n    type,\n    value,\n    ...rest\n  } = props;\n\n  const [checked, setChecked] = useState(checkedFromProps);\n\n  useEffect(() => {\n    setChecked(checkedFromProps);\n  }, []);\n\n  const onClickHandler = event => {\n    if (onClick && !disabled) {\n      onClick(!checked, event);\n    }\n\n    if (!disabled) {\n      setChecked(!checked);\n    }\n  };\n\n  return (\n    <CheckBox onClick={onClickHandler}>\n      <input\n        checked={checked}\n        disabled={disabled}\n        name={name}\n        onChange={() => {}}\n        type={type}\n        value={value}\n      />\n\n      <span />\n\n      Checkbox\n    </CheckBox>\n  );\n};\n\n// CheckBox.propTypes = {\n//   checked: PropTypes.bool,\n//   children: PropTypes.node,\n//   disabled: PropTypes.bool,\n//   name: PropTypes.string,\n//   onClick: PropTypes.func,\n//   type: PropTypes.oneOf([\"checkbox\", \"radio\"]),\n//   value: PropTypes.bool\n// };\n\n// CheckBox.defaultProps = {\n//   checked: false,\n//   type: \"checkbox\"\n// };\n\nexport default CheckBox;\n"]},"metadata":{},"sourceType":"module"}