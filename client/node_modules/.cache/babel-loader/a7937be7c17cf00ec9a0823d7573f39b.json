{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/abe/Projects/mad-max-ak2020/client/src/components/users/UsersContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction UsersContainer(props) {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const fetchCountries = endpoint => {\n    return new Promise((resolve, reject) => {\n      axios.get(endpoint).then(response => {\n        console.log(\"axios: \", response.data);\n        resolve(response.data);\n      }).catch(error => reject(error));\n    });\n  };\n\n  let mainContent;\n\n  function initApp() {\n    console.log(\"init\");\n    fetchCountries('http://localhost:5000/users') // .then(response => {\n    //   return response.text();\n    // })\n    .then(response => {\n      console.log(\"response: \", response);\n    }).then(response => {\n      setCountries(response);\n      console.log(countries);\n      setLoading(true);\n    }).catch(error => {\n      setError(error.message);\n      setLoading(true);\n    });\n  } // function initApp() {\n  //   // this is hit API to setState on countries\n  //   fetchCountries('http://localhost:5000/users')\n  //     .then(response => {\n  //       return response.text();\n  //     })\n  //     .then(data => {\n  //       console.log(data[0]);\n  //     })\n  //     .then(data => {\n  //       setCountries(data);\n  //       setLoading(true);\n  //     })\n  //     .catch(error => {\n  //       setError(error.message);\n  //       setLoading(true)\n  //     })\n  // }\n  //on load\n\n\n  useEffect(() => {\n    initApp();\n  }, []);\n\n  if (loading) {\n    console.log(\"here: \", countries);\n    renderCountries(countries);\n  } else {\n    renderLoader();\n  }\n\n  function renderCountries(countries) {\n    mainContent = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"countries-container\",\n      children: error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 53\n      }, this) : countries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n\n  function renderLoader() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: mainContent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UsersContainer, \"TiBgVUGbrhg1kW7jYtikSCZA70g=\");\n\n_c = UsersContainer;\n;\nexport default UsersContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersContainer\");","map":{"version":3,"sources":["/Users/abe/Projects/mad-max-ak2020/client/src/components/users/UsersContainer.js"],"names":["React","useEffect","useState","axios","UsersContainer","props","countries","setCountries","loading","setLoading","error","setError","fetchCountries","endpoint","Promise","resolve","reject","get","then","response","console","log","data","catch","mainContent","initApp","message","renderCountries","renderLoader"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC7B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMU,cAAc,GAAIC,QAAD,IAAc;AACnC,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCb,MAAAA,KAAK,CAACc,GAAN,CAAUJ,QAAV,EAAoBK,IAApB,CAAyBC,QAAQ,IAAI;AACnCC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,QAAQ,CAACG,IAAhC;AACAP,QAAAA,OAAO,CAACI,QAAQ,CAACG,IAAV,CAAP;AACD,OAHD,EAGGC,KAHH,CAGSb,KAAK,IAAIM,MAAM,CAACN,KAAD,CAHxB;AAID,KALM,CAAP;AAMD,GAPD;;AASA,MAAIc,WAAJ;;AAEA,WAASC,OAAT,GAAmB;AACjBL,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAT,IAAAA,cAAc,CAAC,6BAAD,CAAd,CACE;AACA;AACA;AAHF,KAIGM,IAJH,CAIQC,QAAQ,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,QAA1B;AACD,KANH,EAOGD,IAPH,CAOQC,QAAQ,IAAI;AAChBZ,MAAAA,YAAY,CAACY,QAAD,CAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYf,SAAZ;AACAG,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KAXH,EAYGc,KAZH,CAYSb,KAAK,IAAI;AACdC,MAAAA,QAAQ,CAACD,KAAK,CAACgB,OAAP,CAAR;AACAjB,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KAfH;AAgBD,GAlC4B,CAsC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACAR,EAAAA,SAAS,CAAC,MAAM;AACdwB,IAAAA,OAAO;AACR,GAFQ,EAEP,EAFO,CAAT;;AAMA,MAAIjB,OAAJ,EAAa;AACXY,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBf,SAAtB;AACAqB,IAAAA,eAAe,CAACrB,SAAD,CAAf;AACD,GAHD,MAGO;AACLsB,IAAAA,YAAY;AACb;;AAED,WAASD,eAAT,CAAyBrB,SAAzB,EAAoC;AAClCkB,IAAAA,WAAW,gBACT;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,gBAAsCd,KAAK,gBAAG;AAAA,kBAAMA,KAAK,CAACgB;AAAZ;AAAA;AAAA;AAAA;AAAA,cAAH,GAAgCpB;AAA3E;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAED,WAASsB,YAAT,GAAwB;AACtB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAGD,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,cACGJ;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAvFQpB,c;;KAAAA,c;AAuFR;AAED,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction UsersContainer(props) {\n  const [countries, setCountries] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const fetchCountries = (endpoint) => {\n    return new Promise((resolve, reject) => {\n      axios.get(endpoint).then(response => {\n        console.log(\"axios: \", response.data)\n        resolve(response.data);\n      }).catch(error => reject(error));\n    });\n  };\n\n  let mainContent\n\n  function initApp() {\n    console.log(\"init\")\n    fetchCountries('http://localhost:5000/users')\n      // .then(response => {\n      //   return response.text();\n      // })\n      .then(response => {\n        console.log(\"response: \", response);\n      })\n      .then(response => {\n        setCountries(response);\n        console.log(countries)\n        setLoading(true);\n      })\n      .catch(error => {\n        setError(error.message);\n        setLoading(true)\n      })\n  }\n\n\n\n  // function initApp() {\n  //   // this is hit API to setState on countries\n  //   fetchCountries('http://localhost:5000/users')\n  //     .then(response => {\n  //       return response.text();\n  //     })\n  //     .then(data => {\n  //       console.log(data[0]);\n  //     })\n  //     .then(data => {\n  //       setCountries(data);\n  //       setLoading(true);\n  //     })\n  //     .catch(error => {\n  //       setError(error.message);\n  //       setLoading(true)\n  //     })\n  // }\n\n  //on load\n  useEffect(() => {\n    initApp();\n  },[]);\n\n\n\n  if (loading) {\n    console.log(\"here: \", countries)\n    renderCountries(countries);\n  } else {\n    renderLoader();\n  }\n\n  function renderCountries(countries) {\n    mainContent =\n      <div className=\"countries-container\">{error ? <div>{error.message}</div> : countries}\n      </div>;\n  }\n\n  function renderLoader() {\n    return <div>Loading...</div>\n  }\n\n\n  return (\n    <div className=\"app-container\">\n      {mainContent}\n    </div>\n  );\n};\n\nexport default UsersContainer\n"]},"metadata":{},"sourceType":"module"}