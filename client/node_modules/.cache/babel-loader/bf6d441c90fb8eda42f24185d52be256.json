{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/abe/Projects/mad-max-ak2020/client/src/components/users/UsersContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\n\nfunction UsersContainer(props) {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  let mainContent; //on load\n\n  useEffect(() => {\n    initApp();\n  }, []);\n\n  function initApp() {\n    // this is hit API to setState on countries\n    fetchCountries('http://localhost:5000/').then(response => {\n      setCountries(response);\n      setLoading(true);\n    }).catch(error => {\n      setError(error.message);\n      setLoading(true);\n    });\n  }\n\n  if (loading) {\n    renderCountries(countries);\n  } else {\n    renderLoader();\n  }\n\n  function renderCountries(countries) {\n    mainContent = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"countries-container\",\n      children: error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 53\n      }, this) : countries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n  function renderLoader() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: mainContent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UsersContainer, \"TiBgVUGbrhg1kW7jYtikSCZA70g=\");\n\n_c = UsersContainer;\n;\nexport default UsersContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersContainer\");","map":{"version":3,"sources":["/Users/abe/Projects/mad-max-ak2020/client/src/components/users/UsersContainer.js"],"names":["React","useEffect","useState","UsersContainer","props","countries","setCountries","loading","setLoading","error","setError","mainContent","initApp","fetchCountries","then","response","catch","message","renderCountries","renderLoader"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC7B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AAEA,MAAIS,WAAJ,CAL6B,CAO7B;;AACAV,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;;AAKA,WAASA,OAAT,GAAmB;AACjB;AACAC,IAAAA,cAAc,CAAC,wBAAD,CAAd,CACGC,IADH,CACQC,QAAQ,IAAI;AAChBT,MAAAA,YAAY,CAACS,QAAD,CAAZ;AACAP,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KAJH,EAKGQ,KALH,CAKSP,KAAK,IAAI;AACdC,MAAAA,QAAQ,CAACD,KAAK,CAACQ,OAAP,CAAR;AACAT,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KARH;AASD;;AAGD,MAAID,OAAJ,EAAa;AACXW,IAAAA,eAAe,CAACb,SAAD,CAAf;AACD,GAFD,MAEO;AACLc,IAAAA,YAAY;AACb;;AAED,WAASD,eAAT,CAAyBb,SAAzB,EAAoC;AAClCM,IAAAA,WAAW,gBACT;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,gBAAsCF,KAAK,gBAAG;AAAA,kBAAMA,KAAK,CAACQ;AAAZ;AAAA;AAAA;AAAA;AAAA,cAAH,GAAgCZ;AAA3E;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAED,WAASc,YAAT,GAAwB;AACtB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAGD,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,cACGR;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAjDQR,c;;KAAAA,c;AAiDR;AAED,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction UsersContainer(props) {\n  const [countries, setCountries] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  let mainContent\n\n  //on load\n  useEffect(() => {\n    initApp();\n  }, []);\n\n\n  function initApp() {\n    // this is hit API to setState on countries\n    fetchCountries('http://localhost:5000/')\n      .then(response => {\n        setCountries(response);\n        setLoading(true);\n      })\n      .catch(error => {\n        setError(error.message);\n        setLoading(true)\n      })\n  }\n\n\n  if (loading) {\n    renderCountries(countries);\n  } else {\n    renderLoader();\n  }\n\n  function renderCountries(countries) {\n    mainContent =\n      <div className=\"countries-container\">{error ? <div>{error.message}</div> : countries}\n      </div>;\n  }\n\n  function renderLoader() {\n    return <div>Loading...</div>\n  }\n\n\n  return (\n    <div className=\"app-container\">\n      {mainContent}\n    </div>\n  );\n};\n\nexport default UsersContainer\n"]},"metadata":{},"sourceType":"module"}